/*
 * catalogue-api
 * NHS Digital GP IT Futures Buying Catalog API
 *
 * OpenAPI spec version: 1.0.0-private-beta
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.model.PaginatedListSolutions;
import io.swagger.client.model.Solutions;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SolutionsApi
 */
@Ignore
public class SolutionsApiTest {

    private final SolutionsApi api = new SolutionsApi();

    
    /**
     * Get existing solution/s on which were onboarded onto a framework,  given the CRM identifier of the framework
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void apiSolutionsByFrameworkByFrameworkIdGetTest() {
        String frameworkId = null;
        Integer pageIndex = null;
        Integer pageSize = null;
        PaginatedListSolutions response = api.apiSolutionsByFrameworkByFrameworkIdGet(frameworkId, pageIndex, pageSize);

        // TODO: test validations
    }
    
    /**
     * Get an existing solution given its CRM identifier  Typically used to retrieve previous version
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void apiSolutionsByIdByIdGetTest() {
        String id = null;
        Solutions response = api.apiSolutionsByIdByIdGet(id);

        // TODO: test validations
    }
    
    /**
     * Retrieve all current solutions in a paged list for an organisation,  given the organisationâ€™s CRM identifier
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void apiSolutionsByOrganisationByOrganisationIdGetTest() {
        String organisationId = null;
        Integer pageIndex = null;
        Integer pageSize = null;
        PaginatedListSolutions response = api.apiSolutionsByOrganisationByOrganisationIdGet(organisationId, pageIndex, pageSize);

        // TODO: test validations
    }
    
    /**
     * Delete an existing solution  DEVELOPMENT MODE ONLY
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void apiSolutionsDeleteTest() {
        Solutions solution = null;
        api.apiSolutionsDelete(solution);

        // TODO: test validations
    }
    
    /**
     * Create a new solution for an organisation
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void apiSolutionsPostTest() {
        Solutions solution = null;
        Solutions response = api.apiSolutionsPost(solution);

        // TODO: test validations
    }
    
    /**
     * Update an existing solution with new information
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void apiSolutionsPutTest() {
        Solutions solution = null;
        api.apiSolutionsPut(solution);

        // TODO: test validations
    }
    
}
